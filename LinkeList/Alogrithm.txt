circularDoubleLinkedList():

        Node {   
        previousNode;
        nodeData;
        nextNode;  }

    append(data):
        if head = null :
            head = newNode;
            newNode.pre = newNode;
            newNode.next = head;
        else :
            newNode.pre = lastNode;
            newNode.next = head;
            lastNode.next = newNode;


    insert(data, index):
            let current = head;
            
            
            if index = 0 :
            // Insert at head 
                if head = null:
                head = newNode;
                newNode.next = head;
                newNode.pre = head;
                else :
                newNode.next = head;  
                head.pre = newNode;
                newNode.pre = lastNode;
                head = newNode;
                lastNode.next = head;
            else :           
                newNode.next = previousNode.next;
                newNode.pre = previousNode;
                previousNode.next.pre = newNode;
                previousNode.next = newNode;

    removeAt(index) :
            let current = head;
            
            //Remove from head
            if index = 0 :
            if length = 1 :
                head = null;
            else : 
                head = head.next;
                head.pre = lastNode;
                lastNode.next = head;

            else :
            //Remove at given index (middle or end) 
            currentNode = previousNode.next;
            currentNode.next.pre = previousNode;
            previousNode.next = currentNode.next;


    indexOf(data) :

            let current = head,
            index = -1;
        
            //If element found then return its position
            
            while(current) :
                if elm === current.data :
                    return ++index;
                if current.next = head :
                    return -1             
                index++;
                current = current.next;

    
    //Convert list to array

    toArray () :
        let arr = [],
        current = head;

        while(current) :
            if current.next == head :
            arr.push(current.data);
            break;
            
            arr.push(current.data);
            current = current.next;

    delete(data):
       removeAt(this.indexOf(data));
        
    isPresent(data):
        indexOf(data) !== -1 ;


uniqueArray(Array){

    return Array.filter((value , index)=>{
        return Array.indexOf(value) == index;
    })
}
